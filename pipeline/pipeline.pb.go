// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipeline/pipeline.proto

package pipeline

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TrimType はトリムの定義。
type Trim int32

const (
	// 両サイドをトリムする。
	Trim_TrimBoth Trim = 1
	// 左サイドをトリムする。
	Trim_TrimLeft Trim = 2
	// 右サイドをトリムする。
	Trim_TrimRight Trim = 3
)

var Trim_name = map[int32]string{
	1: "TrimBoth",
	2: "TrimLeft",
	3: "TrimRight",
}

var Trim_value = map[string]int32{
	"TrimBoth":  1,
	"TrimLeft":  2,
	"TrimRight": 3,
}

func (x Trim) Enum() *Trim {
	p := new(Trim)
	*p = x
	return p
}

func (x Trim) String() string {
	return proto.EnumName(Trim_name, int32(x))
}

func (x *Trim) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Trim_value, data, "Trim")
	if err != nil {
		return err
	}
	*x = Trim(value)
	return nil
}

func (Trim) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_26c1246e548f11df, []int{0}
}

// OmissionPosition は省略する位置の定義。
type OmissionPosition int32

const (
	// 先頭を省略する。
	OmissionPosition_OmissionPositionLeft OmissionPosition = 1
	// 中央を省略する。
	OmissionPosition_OmissionPositionCenter OmissionPosition = 2
	// 末尾を省略する。
	OmissionPosition_OmissionPositionRight OmissionPosition = 3
)

var OmissionPosition_name = map[int32]string{
	1: "OmissionPositionLeft",
	2: "OmissionPositionCenter",
	3: "OmissionPositionRight",
}

var OmissionPosition_value = map[string]int32{
	"OmissionPositionLeft":   1,
	"OmissionPositionCenter": 2,
	"OmissionPositionRight":  3,
}

func (x OmissionPosition) Enum() *OmissionPosition {
	p := new(OmissionPosition)
	*p = x
	return p
}

func (x OmissionPosition) String() string {
	return proto.EnumName(OmissionPosition_name, int32(x))
}

func (x *OmissionPosition) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OmissionPosition_value, data, "OmissionPosition")
	if err != nil {
		return err
	}
	*x = OmissionPosition(value)
	return nil
}

func (OmissionPosition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_26c1246e548f11df, []int{1}
}

type FieldProcesses struct {
	Message *MessageProcesses `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*FieldProcesses_String_
	//	*FieldProcesses_Repeated
	Type                 isFieldProcesses_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FieldProcesses) Reset()         { *m = FieldProcesses{} }
func (m *FieldProcesses) String() string { return proto.CompactTextString(m) }
func (*FieldProcesses) ProtoMessage()    {}
func (*FieldProcesses) Descriptor() ([]byte, []int) {
	return fileDescriptor_26c1246e548f11df, []int{0}
}

func (m *FieldProcesses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldProcesses.Unmarshal(m, b)
}
func (m *FieldProcesses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldProcesses.Marshal(b, m, deterministic)
}
func (m *FieldProcesses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldProcesses.Merge(m, src)
}
func (m *FieldProcesses) XXX_Size() int {
	return xxx_messageInfo_FieldProcesses.Size(m)
}
func (m *FieldProcesses) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldProcesses.DiscardUnknown(m)
}

var xxx_messageInfo_FieldProcesses proto.InternalMessageInfo

func (m *FieldProcesses) GetMessage() *MessageProcesses {
	if m != nil {
		return m.Message
	}
	return nil
}

type isFieldProcesses_Type interface {
	isFieldProcesses_Type()
}

type FieldProcesses_String_ struct {
	String_ *StringProcesses `protobuf:"bytes,2,opt,name=string,oneof"`
}

type FieldProcesses_Repeated struct {
	Repeated *RepeatedProcesses `protobuf:"bytes,3,opt,name=repeated,oneof"`
}

func (*FieldProcesses_String_) isFieldProcesses_Type() {}

func (*FieldProcesses_Repeated) isFieldProcesses_Type() {}

func (m *FieldProcesses) GetType() isFieldProcesses_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *FieldProcesses) GetString_() *StringProcesses {
	if x, ok := m.GetType().(*FieldProcesses_String_); ok {
		return x.String_
	}
	return nil
}

func (m *FieldProcesses) GetRepeated() *RepeatedProcesses {
	if x, ok := m.GetType().(*FieldProcesses_Repeated); ok {
		return x.Repeated
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FieldProcesses) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FieldProcesses_String_)(nil),
		(*FieldProcesses_Repeated)(nil),
	}
}

type StringProcesses struct {
	// トリムする。
	Trim *Trim `protobuf:"varint,1,opt,name=trim,enum=pipeline.Trim" json:"trim,omitempty"`
	// 指定した文字を削除する。
	// TODO: 配列で指定できるように対応する。
	RemoveAll *string `protobuf:"bytes,2,opt,name=remove_all,json=removeAll" json:"remove_all,omitempty"`
	// 指定した文字を指定した文字へリプレイスする。
	// TODO: 配列で指定できるように対応する。
	Replace *StringReplace `protobuf:"bytes,3,opt,name=replace" json:"replace,omitempty"`
	// 指定した文字以内で省略する。
	Omission             *StringOmission `protobuf:"bytes,4,opt,name=omission" json:"omission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StringProcesses) Reset()         { *m = StringProcesses{} }
func (m *StringProcesses) String() string { return proto.CompactTextString(m) }
func (*StringProcesses) ProtoMessage()    {}
func (*StringProcesses) Descriptor() ([]byte, []int) {
	return fileDescriptor_26c1246e548f11df, []int{1}
}

func (m *StringProcesses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringProcesses.Unmarshal(m, b)
}
func (m *StringProcesses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringProcesses.Marshal(b, m, deterministic)
}
func (m *StringProcesses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringProcesses.Merge(m, src)
}
func (m *StringProcesses) XXX_Size() int {
	return xxx_messageInfo_StringProcesses.Size(m)
}
func (m *StringProcesses) XXX_DiscardUnknown() {
	xxx_messageInfo_StringProcesses.DiscardUnknown(m)
}

var xxx_messageInfo_StringProcesses proto.InternalMessageInfo

func (m *StringProcesses) GetTrim() Trim {
	if m != nil && m.Trim != nil {
		return *m.Trim
	}
	return Trim_TrimBoth
}

func (m *StringProcesses) GetRemoveAll() string {
	if m != nil && m.RemoveAll != nil {
		return *m.RemoveAll
	}
	return ""
}

func (m *StringProcesses) GetReplace() *StringReplace {
	if m != nil {
		return m.Replace
	}
	return nil
}

func (m *StringProcesses) GetOmission() *StringOmission {
	if m != nil {
		return m.Omission
	}
	return nil
}

type StringReplace struct {
	// 置換対象の文字。
	Old *string `protobuf:"bytes,1,req,name=old" json:"old,omitempty"`
	// 置換後の文字。
	New                  *string  `protobuf:"bytes,2,req,name=new" json:"new,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringReplace) Reset()         { *m = StringReplace{} }
func (m *StringReplace) String() string { return proto.CompactTextString(m) }
func (*StringReplace) ProtoMessage()    {}
func (*StringReplace) Descriptor() ([]byte, []int) {
	return fileDescriptor_26c1246e548f11df, []int{2}
}

func (m *StringReplace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringReplace.Unmarshal(m, b)
}
func (m *StringReplace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringReplace.Marshal(b, m, deterministic)
}
func (m *StringReplace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringReplace.Merge(m, src)
}
func (m *StringReplace) XXX_Size() int {
	return xxx_messageInfo_StringReplace.Size(m)
}
func (m *StringReplace) XXX_DiscardUnknown() {
	xxx_messageInfo_StringReplace.DiscardUnknown(m)
}

var xxx_messageInfo_StringReplace proto.InternalMessageInfo

func (m *StringReplace) GetOld() string {
	if m != nil && m.Old != nil {
		return *m.Old
	}
	return ""
}

func (m *StringReplace) GetNew() string {
	if m != nil && m.New != nil {
		return *m.New
	}
	return ""
}

type StringOmission struct {
	// (replaceの文字数+3)以上の値を設定すること。
	Len *uint64 `protobuf:"varint,1,req,name=len" json:"len,omitempty"`
	// 置換する文字。
	Replace *string `protobuf:"bytes,2,req,name=replace" json:"replace,omitempty"`
	// 省略する位置。
	Position             *OmissionPosition `protobuf:"varint,3,req,name=position,enum=pipeline.OmissionPosition" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StringOmission) Reset()         { *m = StringOmission{} }
func (m *StringOmission) String() string { return proto.CompactTextString(m) }
func (*StringOmission) ProtoMessage()    {}
func (*StringOmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_26c1246e548f11df, []int{3}
}

func (m *StringOmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringOmission.Unmarshal(m, b)
}
func (m *StringOmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringOmission.Marshal(b, m, deterministic)
}
func (m *StringOmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringOmission.Merge(m, src)
}
func (m *StringOmission) XXX_Size() int {
	return xxx_messageInfo_StringOmission.Size(m)
}
func (m *StringOmission) XXX_DiscardUnknown() {
	xxx_messageInfo_StringOmission.DiscardUnknown(m)
}

var xxx_messageInfo_StringOmission proto.InternalMessageInfo

func (m *StringOmission) GetLen() uint64 {
	if m != nil && m.Len != nil {
		return *m.Len
	}
	return 0
}

func (m *StringOmission) GetReplace() string {
	if m != nil && m.Replace != nil {
		return *m.Replace
	}
	return ""
}

func (m *StringOmission) GetPosition() OmissionPosition {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return OmissionPosition_OmissionPositionLeft
}

type RepeatedProcesses struct {
	Items                *FieldProcesses `protobuf:"bytes,1,opt,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RepeatedProcesses) Reset()         { *m = RepeatedProcesses{} }
func (m *RepeatedProcesses) String() string { return proto.CompactTextString(m) }
func (*RepeatedProcesses) ProtoMessage()    {}
func (*RepeatedProcesses) Descriptor() ([]byte, []int) {
	return fileDescriptor_26c1246e548f11df, []int{4}
}

func (m *RepeatedProcesses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatedProcesses.Unmarshal(m, b)
}
func (m *RepeatedProcesses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatedProcesses.Marshal(b, m, deterministic)
}
func (m *RepeatedProcesses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatedProcesses.Merge(m, src)
}
func (m *RepeatedProcesses) XXX_Size() int {
	return xxx_messageInfo_RepeatedProcesses.Size(m)
}
func (m *RepeatedProcesses) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatedProcesses.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatedProcesses proto.InternalMessageInfo

func (m *RepeatedProcesses) GetItems() *FieldProcesses {
	if m != nil {
		return m.Items
	}
	return nil
}

type MessageProcesses struct {
	// 処理をskipする。
	Skip                 *bool    `protobuf:"varint,1,opt,name=skip" json:"skip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageProcesses) Reset()         { *m = MessageProcesses{} }
func (m *MessageProcesses) String() string { return proto.CompactTextString(m) }
func (*MessageProcesses) ProtoMessage()    {}
func (*MessageProcesses) Descriptor() ([]byte, []int) {
	return fileDescriptor_26c1246e548f11df, []int{5}
}

func (m *MessageProcesses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageProcesses.Unmarshal(m, b)
}
func (m *MessageProcesses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageProcesses.Marshal(b, m, deterministic)
}
func (m *MessageProcesses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageProcesses.Merge(m, src)
}
func (m *MessageProcesses) XXX_Size() int {
	return xxx_messageInfo_MessageProcesses.Size(m)
}
func (m *MessageProcesses) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageProcesses.DiscardUnknown(m)
}

var xxx_messageInfo_MessageProcesses proto.InternalMessageInfo

func (m *MessageProcesses) GetSkip() bool {
	if m != nil && m.Skip != nil {
		return *m.Skip
	}
	return false
}

var E_Processes = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*FieldProcesses)(nil),
	Field:         27063,
	Name:          "pipeline.processes",
	Tag:           "bytes,27063,opt,name=processes",
	Filename:      "pipeline/pipeline.proto",
}

func init() {
	proto.RegisterEnum("pipeline.Trim", Trim_name, Trim_value)
	proto.RegisterEnum("pipeline.OmissionPosition", OmissionPosition_name, OmissionPosition_value)
	proto.RegisterType((*FieldProcesses)(nil), "pipeline.FieldProcesses")
	proto.RegisterType((*StringProcesses)(nil), "pipeline.StringProcesses")
	proto.RegisterType((*StringReplace)(nil), "pipeline.StringReplace")
	proto.RegisterType((*StringOmission)(nil), "pipeline.StringOmission")
	proto.RegisterType((*RepeatedProcesses)(nil), "pipeline.RepeatedProcesses")
	proto.RegisterType((*MessageProcesses)(nil), "pipeline.MessageProcesses")
	proto.RegisterExtension(E_Processes)
}

func init() { proto.RegisterFile("pipeline/pipeline.proto", fileDescriptor_26c1246e548f11df) }

var fileDescriptor_26c1246e548f11df = []byte{
	// 506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x8e, 0x69, 0x9d, 0x81, 0x06, 0xb3, 0x02, 0xea, 0x06, 0x55, 0x8a, 0x7c, 0x40, 0x51,
	0xa5, 0x38, 0xea, 0x87, 0x90, 0xe0, 0x46, 0x2a, 0x21, 0x0e, 0xa0, 0x56, 0x0b, 0x12, 0x12, 0x17,
	0x94, 0x3a, 0x53, 0x67, 0xc5, 0xda, 0xbb, 0xda, 0xdd, 0x12, 0xf1, 0xcb, 0x38, 0xc1, 0x9f, 0xe0,
	0x0f, 0x21, 0xef, 0xda, 0x4e, 0xe2, 0x1c, 0x7a, 0xf2, 0x78, 0xe6, 0xbd, 0xb7, 0x6f, 0x76, 0x76,
	0xe0, 0x50, 0x32, 0x89, 0x9c, 0x95, 0x38, 0x6d, 0x82, 0x54, 0x2a, 0x61, 0x04, 0x09, 0x9b, 0xff,
	0xe1, 0x28, 0x17, 0x22, 0xe7, 0x38, 0xb5, 0xf9, 0x9b, 0xbb, 0xdb, 0xe9, 0x02, 0x75, 0xa6, 0x98,
	0x34, 0x42, 0x39, 0x6c, 0xf2, 0xd7, 0x83, 0xc1, 0x7b, 0x86, 0x7c, 0x71, 0xad, 0x44, 0x86, 0x5a,
	0xa3, 0x26, 0x17, 0xb0, 0x5f, 0xa0, 0xd6, 0xf3, 0x1c, 0x63, 0x6f, 0xe4, 0x8d, 0x1f, 0x9d, 0x0d,
	0xd3, 0xf6, 0x80, 0x4f, 0xae, 0xd0, 0x82, 0x69, 0x03, 0x25, 0xe7, 0xb0, 0xa7, 0x8d, 0x62, 0x65,
	0x1e, 0xfb, 0x96, 0x74, 0xb4, 0x26, 0x7d, 0xb6, 0xf9, 0x96, 0xf3, 0xe1, 0x01, 0xad, 0xa1, 0xe4,
	0x0d, 0x84, 0x0a, 0x25, 0xce, 0x0d, 0x2e, 0xe2, 0x9e, 0xa5, 0xbd, 0x5c, 0xd3, 0x68, 0x5d, 0xd9,
	0x24, 0xb6, 0xf0, 0xd9, 0x1e, 0x04, 0xe6, 0x97, 0xc4, 0xe4, 0x8f, 0x07, 0x4f, 0x3a, 0x07, 0x90,
	0x04, 0x02, 0xa3, 0x58, 0x61, 0xed, 0x0f, 0xce, 0x06, 0x6b, 0xc9, 0x2f, 0x8a, 0x15, 0xd4, 0xd6,
	0xc8, 0x31, 0x80, 0xc2, 0x42, 0xfc, 0xc4, 0xef, 0x73, 0xce, 0xad, 0xe7, 0x3e, 0xed, 0xbb, 0xcc,
	0x3b, 0xce, 0xc9, 0x29, 0xec, 0x2b, 0x94, 0x7c, 0x9e, 0x61, 0x6d, 0xec, 0xb0, 0xdb, 0x0f, 0x75,
	0x65, 0xda, 0xe0, 0xc8, 0x05, 0x84, 0xa2, 0x60, 0x5a, 0x33, 0x51, 0xc6, 0x81, 0xe5, 0xc4, 0x5d,
	0xce, 0x55, 0x5d, 0xa7, 0x2d, 0x32, 0x39, 0x87, 0x83, 0x2d, 0x3d, 0x12, 0x41, 0x4f, 0xf0, 0x45,
	0xec, 0x8d, 0xfc, 0x71, 0x9f, 0x56, 0x61, 0x95, 0x29, 0x71, 0x15, 0xfb, 0x2e, 0x53, 0xe2, 0x2a,
	0x31, 0x30, 0xd8, 0x16, 0xac, 0x30, 0x1c, 0x4b, 0xcb, 0x0a, 0x68, 0x15, 0x92, 0x78, 0xdd, 0x81,
	0x63, 0xb6, 0x46, 0x5f, 0x43, 0x28, 0x85, 0x66, 0xa6, 0x32, 0xda, 0x1b, 0xf9, 0xe3, 0xc1, 0xe6,
	0x84, 0x1b, 0xc5, 0xeb, 0x1a, 0x41, 0x5b, 0x6c, 0x72, 0x09, 0x4f, 0x77, 0x66, 0x42, 0x52, 0x78,
	0xc8, 0x0c, 0x16, 0xba, 0x7e, 0x2b, 0x1b, 0x2d, 0x6f, 0x3f, 0x2b, 0xea, 0x60, 0xc9, 0x2b, 0x88,
	0xba, 0x8f, 0x88, 0x10, 0x08, 0xf4, 0x0f, 0x26, 0xad, 0x44, 0x48, 0x6d, 0x7c, 0x72, 0x0a, 0x41,
	0x35, 0x2d, 0xf2, 0x18, 0xc2, 0xea, 0x3b, 0x13, 0x66, 0x19, 0x79, 0xcd, 0xdf, 0x47, 0xbc, 0x35,
	0x91, 0x4f, 0x0e, 0xa0, 0x6f, 0x27, 0xca, 0xf2, 0xa5, 0x89, 0x7a, 0x27, 0x19, 0x44, 0x5d, 0xf7,
	0x24, 0x86, 0x67, 0xdd, 0x9c, 0x25, 0x7b, 0x64, 0x08, 0x2f, 0xba, 0x95, 0x4b, 0x2c, 0x0d, 0xaa,
	0xc8, 0x27, 0x47, 0xf0, 0x7c, 0xe7, 0x1e, 0xdc, 0x21, 0x6f, 0xbf, 0x42, 0x5f, 0xb6, 0xc6, 0x8f,
	0x53, 0xb7, 0x60, 0x69, 0xb3, 0x60, 0xae, 0xe9, 0x2b, 0x59, 0x31, 0x74, 0xfc, 0xfb, 0xdf, 0x7d,
	0x97, 0xb2, 0xd6, 0x9a, 0x4d, 0xbf, 0x4d, 0x72, 0x66, 0x96, 0x77, 0x37, 0x69, 0x26, 0x8a, 0xe9,
	0x4a, 0x28, 0xd4, 0x6e, 0x6f, 0xb3, 0x49, 0x8e, 0xe5, 0x64, 0x67, 0xd9, 0xff, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x05, 0x79, 0xa8, 0xd4, 0x00, 0x04, 0x00, 0x00,
}
